{"ast":null,"code":"// import { useParams } from \"react-router-dom\";\n// import image from \"./images/im8.jpg\";\n// import { useEffect, useState } from \"react\";\n// import { toast } from \"react-toastify\";\n// import { editbranchDetails } from \"./services/branch\";\n// import { Link, useNavigate } from \"react-router-dom\";\n// import \"./common.css\";\n\n// import { updateBranch as updateBranchApi } from \"./services/branch\";\n// import { log } from \"./utils/utils\";\n\n// function Edit() {\n//   const navigate = useNavigate();\n\n//   const { branchId } = useParams();\n\n//   const [branch, setBranch] = useState({\n//     branchId: \"\",\n//     branchName: \"\",\n//     branchCode: \"\",\n//     branchLocation: \"\",\n//     branchManager: \"\",\n//   });\n\n//   const getBranchDetailsToEdit = async (branchId) => {\n//     const response = await editbranchDetails(branchId);\n//     debugger;\n//     if (response !== null) {\n//       setBranch(response);\n//     } else {\n//       toast.error(\"branch not found\");\n//     }\n//   };\n\n//   useEffect(() => {\n//     getBranchDetailsToEdit(branchId);\n//     debugger;\n//   }, []);\n\n//   const updateBranch = async () => {\n//     debugger;\n\n//     if (branch.branchName.length == \"\") {\n//       toast.error(\"Please enter branch name\");\n//     } else if (branch.branchCode.length == \"\") {\n//       toast.error(\"Please enter branch code\");\n//     } else if (branch.branchLocation.length == \"\") {\n//       toast.error(\"Please enter branch location\");\n//     } else if (branch.branchManager.length == \"\") {\n//       toast.error(\"Please enter branch manager\");\n//     } else {\n//       const response = await updateBranchApi(\n//         branch.branchId,\n//         branch.branchName,\n//         branch.branchLocation,\n//         branch.branchCode,\n//         branch.branchManager\n//       );\n//       debugger;\n//       if (response) {\n//         debugger;\n//         toast.success(\"Successfully profile update\");\n//         log(response.data);\n//         // go back to login\n//         navigate(\"/admin\");\n//       } else {\n//         toast.error(\"Error while registering a  user, please try again\");\n//       }\n//     }\n//   };\n//   return (\n//     <div style={{ backgroundImage: `url(${image})` }}>\n//       <div className=\"lengths\">\n//         <div></div>\n//         <center>\n//           <table className=\"b\">\n//             <tr>\n//               <td>Enter Branch Id</td>\n//               <td className=\"td\"></td>\n//               <td>\n//                 <input\n//                   type=\"number\"\n//                   placeholder=\"Branch Name\"\n//                   value={branch.branchId}\n//                   disabled\n//                   onChange={(e) => {\n//                     setBranch({ ...branch, branchId: e.target.value });\n//                   }}\n//                 />\n//               </td>\n//             </tr>\n//             <tr className=\"tr\"></tr>\n//             <tr>\n//               <td>Enter Branch Name</td>\n//               <td className=\"td\"></td>\n//               <td>\n//                 <input\n//                   type=\"text\"\n//                   placeholder=\"Branch Name\"\n//                   value={branch.branchName}\n//                   onChange={(e) => {\n//                     setBranch({ ...branch, branchName: e.target.value });\n//                   }}\n//                 />\n//               </td>\n//             </tr>\n//             <tr className=\"tr\"></tr>\n//             <tr>\n//               <td>Enter Branch Location</td>\n//               <td className=\"td\"></td>\n//               <td>\n//                 <input\n//                   type=\"text\"\n//                   placeholder=\"Branch Location\"\n//                   value={branch.branchLocation}\n//                   onChange={(e) => {\n//                     setBranch({ ...branch, branchLocation: e.target.value });\n//                   }}\n//                 />\n//               </td>\n//             </tr>\n//             <tr className=\"tr\"></tr>\n//             <tr>\n//               <td>Enter Branch Code</td>\n//               <td className=\"td\"></td>\n//               <td>\n//                 <input\n//                   type=\"text\"\n//                   placeholder=\"Branch Code\"\n//                   value={branch.branchCode}\n//                   onChange={(e) => {\n//                     setBranch({ ...branch, branchCode: e.target.value });\n//                   }}\n//                 />\n//               </td>\n//             </tr>\n//             <tr className=\"tr\"></tr>\n//             <tr>\n//               <td>Enter Branch Manager</td>\n//               <td className=\"td\"></td>\n//               <td>\n//                 <input\n//                   type=\"text\"\n//                   placeholder=\"Branch Manager\"\n//                   value={branch.branchManager}\n//                   onChange={(e) => {\n//                     setBranch({ ...branch, branchManager: e.target.value });\n//                   }}\n//                 />\n//               </td>\n//             </tr>\n//             <tr className=\"tr\"></tr>\n//             <tr>\n//               <center>\n//                 <td>\n//                   <button className=\"btn btn-primary\" onClick={updateBranch}>\n//                     Update Branch\n//                   </button>\n//                 </td>\n//               </center>\n//             </tr>\n//           </table>\n//         </center>\n//       </div>\n//     </div>\n//   );\n// }\n// export default Edit;","map":{"version":3,"names":[],"sources":["/home/abhishek/Courier Service Management/Courier/Customers/src/Edit.js"],"sourcesContent":["// import { useParams } from \"react-router-dom\";\n// import image from \"./images/im8.jpg\";\n// import { useEffect, useState } from \"react\";\n// import { toast } from \"react-toastify\";\n// import { editbranchDetails } from \"./services/branch\";\n// import { Link, useNavigate } from \"react-router-dom\";\n// import \"./common.css\";\n\n// import { updateBranch as updateBranchApi } from \"./services/branch\";\n// import { log } from \"./utils/utils\";\n\n// function Edit() {\n//   const navigate = useNavigate();\n\n//   const { branchId } = useParams();\n\n//   const [branch, setBranch] = useState({\n//     branchId: \"\",\n//     branchName: \"\",\n//     branchCode: \"\",\n//     branchLocation: \"\",\n//     branchManager: \"\",\n//   });\n\n//   const getBranchDetailsToEdit = async (branchId) => {\n//     const response = await editbranchDetails(branchId);\n//     debugger;\n//     if (response !== null) {\n//       setBranch(response);\n//     } else {\n//       toast.error(\"branch not found\");\n//     }\n//   };\n\n//   useEffect(() => {\n//     getBranchDetailsToEdit(branchId);\n//     debugger;\n//   }, []);\n\n//   const updateBranch = async () => {\n//     debugger;\n\n//     if (branch.branchName.length == \"\") {\n//       toast.error(\"Please enter branch name\");\n//     } else if (branch.branchCode.length == \"\") {\n//       toast.error(\"Please enter branch code\");\n//     } else if (branch.branchLocation.length == \"\") {\n//       toast.error(\"Please enter branch location\");\n//     } else if (branch.branchManager.length == \"\") {\n//       toast.error(\"Please enter branch manager\");\n//     } else {\n//       const response = await updateBranchApi(\n//         branch.branchId,\n//         branch.branchName,\n//         branch.branchLocation,\n//         branch.branchCode,\n//         branch.branchManager\n//       );\n//       debugger;\n//       if (response) {\n//         debugger;\n//         toast.success(\"Successfully profile update\");\n//         log(response.data);\n//         // go back to login\n//         navigate(\"/admin\");\n//       } else {\n//         toast.error(\"Error while registering a  user, please try again\");\n//       }\n//     }\n//   };\n//   return (\n//     <div style={{ backgroundImage: `url(${image})` }}>\n//       <div className=\"lengths\">\n//         <div></div>\n//         <center>\n//           <table className=\"b\">\n//             <tr>\n//               <td>Enter Branch Id</td>\n//               <td className=\"td\"></td>\n//               <td>\n//                 <input\n//                   type=\"number\"\n//                   placeholder=\"Branch Name\"\n//                   value={branch.branchId}\n//                   disabled\n//                   onChange={(e) => {\n//                     setBranch({ ...branch, branchId: e.target.value });\n//                   }}\n//                 />\n//               </td>\n//             </tr>\n//             <tr className=\"tr\"></tr>\n//             <tr>\n//               <td>Enter Branch Name</td>\n//               <td className=\"td\"></td>\n//               <td>\n//                 <input\n//                   type=\"text\"\n//                   placeholder=\"Branch Name\"\n//                   value={branch.branchName}\n//                   onChange={(e) => {\n//                     setBranch({ ...branch, branchName: e.target.value });\n//                   }}\n//                 />\n//               </td>\n//             </tr>\n//             <tr className=\"tr\"></tr>\n//             <tr>\n//               <td>Enter Branch Location</td>\n//               <td className=\"td\"></td>\n//               <td>\n//                 <input\n//                   type=\"text\"\n//                   placeholder=\"Branch Location\"\n//                   value={branch.branchLocation}\n//                   onChange={(e) => {\n//                     setBranch({ ...branch, branchLocation: e.target.value });\n//                   }}\n//                 />\n//               </td>\n//             </tr>\n//             <tr className=\"tr\"></tr>\n//             <tr>\n//               <td>Enter Branch Code</td>\n//               <td className=\"td\"></td>\n//               <td>\n//                 <input\n//                   type=\"text\"\n//                   placeholder=\"Branch Code\"\n//                   value={branch.branchCode}\n//                   onChange={(e) => {\n//                     setBranch({ ...branch, branchCode: e.target.value });\n//                   }}\n//                 />\n//               </td>\n//             </tr>\n//             <tr className=\"tr\"></tr>\n//             <tr>\n//               <td>Enter Branch Manager</td>\n//               <td className=\"td\"></td>\n//               <td>\n//                 <input\n//                   type=\"text\"\n//                   placeholder=\"Branch Manager\"\n//                   value={branch.branchManager}\n//                   onChange={(e) => {\n//                     setBranch({ ...branch, branchManager: e.target.value });\n//                   }}\n//                 />\n//               </td>\n//             </tr>\n//             <tr className=\"tr\"></tr>\n//             <tr>\n//               <center>\n//                 <td>\n//                   <button className=\"btn btn-primary\" onClick={updateBranch}>\n//                     Update Branch\n//                   </button>\n//                 </td>\n//               </center>\n//             </tr>\n//           </table>\n//         </center>\n//       </div>\n//     </div>\n//   );\n// }\n// export default Edit;\n"],"mappings},"metadata":{},"sourceType":"module","externalDependencies":[]}