{"ast":null,"code":"var _jsxFileName = \"/home/abhishek/Courier Service Management/Courier/Customers/src/Orders.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useInsertionEffect, useState } from \"react\";\nimport { Link, Switch, Route } from \"react-router-dom\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.css\";\nimport \"./common.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useParams } from \"react-router-dom\";\nimport { getEmpList } from \"./services/user\";\nimport { deleteEmp as deleteEmpApi } from \"./services/user\";\nimport { toast } from \"react-toastify\";\nimport userEvent from \"@testing-library/user-event\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Orders() {\n  _s();\n  const [emps, setEmps] = useState([]);\n  const navigate = useNavigate();\n  const {\n    branchId\n  } = useParams();\n  const AddEmp = () => {\n    navigate(\"/addemp\");\n  };\n  const EditEmp = () => {\n    navigate(\"./EditEmp\");\n  };\n  useEffect(() => {\n    loadBranch(branchId);\n  }, []);\n  useEffect(() => {\n    // get the list of products from server\n    //\n  }, [emps]);\n  const loadBranch = async branchId => {\n    const response = await getEmpList(branchId);\n    debugger;\n    if (response !== null) {\n      setEmps(response);\n    } else {\n      toast.error(\"Error while calling get /product api\");\n    }\n  };\n  const deleteEmp = async empId => {\n    const response = await deleteEmpApi(empId);\n    if (response !== null) {\n      toast.success(\"employee deleted successfully\");\n      //navigate(`/emplist/${sessionStorage.getItem(\"branchId\")}`)\n      loadBranch(sessionStorage.getItem(\"branchId\"));\n    } else {\n      toast.error(\"error while deleting employee\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"length\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table table-bordered\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              className: \"colr\",\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"orderId\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"orderWeight\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"fromAddress\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"toAddress\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"orderStatus\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"orderdDate\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"ecpectedDeliveryDate\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"amount\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"trackingId\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: [orders.map(order => {\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: order.orderId\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 76,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: order.orderWeight\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: order.fromAddress\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: order.toAddress\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 79,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: order.orderStatus\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: order.orderdDate\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: order.ecpectedDeliveryDate\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 82,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: order.amount\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 83,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: order.trackingId\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 25\n                }, this)]\n              }, order.orderId, true, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 23\n              }, this);\n            }), \";\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }, this)\n  }, void 0, false);\n}\n_s(Orders, \"zJ0IQtMFRj8mqIxJpw7oXVTi4Vk=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = Orders;\nexport default Orders;\nvar _c;\n$RefreshReg$(_c, \"Orders\");","map":{"version":3,"names":["useEffect","useInsertionEffect","useState","Link","Switch","Route","useNavigate","useParams","getEmpList","deleteEmp","deleteEmpApi","toast","userEvent","jsxDEV","_jsxDEV","Fragment","_Fragment","Orders","_s","emps","setEmps","navigate","branchId","AddEmp","EditEmp","loadBranch","response","error","empId","success","sessionStorage","getItem","children","className","fileName","_jsxFileName","lineNumber","columnNumber","orders","map","order","orderId","orderWeight","fromAddress","toAddress","orderStatus","orderdDate","ecpectedDeliveryDate","amount","trackingId","_c","$RefreshReg$"],"sources":["/home/abhishek/Courier Service Management/Courier/Customers/src/Orders.js"],"sourcesContent":["import { useEffect, useInsertionEffect, useState } from \"react\";\nimport { Link, Switch, Route } from \"react-router-dom\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.css\";\nimport \"./common.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useParams } from \"react-router-dom\";\nimport { getEmpList } from \"./services/user\";\nimport { deleteEmp as deleteEmpApi } from \"./services/user\";\n\nimport { toast } from \"react-toastify\";\nimport userEvent from \"@testing-library/user-event\";\n\nfunction Orders(){\n    const [emps, setEmps] = useState([]);\n    const navigate = useNavigate();\n    const { branchId } = useParams();\n    const AddEmp = () => {\n      navigate(\"/addemp\");\n    };\n    const EditEmp = () => {\n      navigate(\"./EditEmp\");\n    };\n  \n    useEffect(() => {\n      loadBranch(branchId);\n    }, []);\n    useEffect(() => {\n      // get the list of products from server\n      //\n    }, [emps]);\n  \n    const loadBranch = async (branchId) => {\n      const response = await getEmpList(branchId);\n      debugger;\n      if (response !== null) {\n        setEmps(response);\n      } else {\n        toast.error(\"Error while calling get /product api\");\n      }\n    };\n  \n    const deleteEmp = async (empId) => {\n      const response = await deleteEmpApi(empId);\n      if (response !== null) {\n        toast.success(\"employee deleted successfully\");\n        //navigate(`/emplist/${sessionStorage.getItem(\"branchId\")}`)\n        loadBranch(sessionStorage.getItem(\"branchId\"));\n      } else {\n        toast.error(\"error while deleting employee\");\n      }\n    };\n\n    return (\n        <>\n          <div className=\"length\">\n            <div>\n              <table className=\"table table-bordered\">\n                <thead>\n                  <tr className=\"colr\">\n                    <td>orderId</td>\n                    <td>orderWeight</td>\n                    <td>fromAddress</td>\n                    <td>toAddress</td>\n                    <td>orderStatus</td>\n                    <td>orderdDate</td>\n                    <td>ecpectedDeliveryDate</td>\n                    <td>amount</td>\n                    <td>trackingId</td>\n                  </tr>\n                </thead>\n    \n                <tbody>\n                  {orders.map((order) => {\n                    return (\n                      <tr key={order.orderId}>\n                        <td>{order.orderId}</td>\n                        <td>{order.orderWeight}</td>\n                        <td>{order.fromAddress}</td>\n                        <td>{order.toAddress}</td>\n                        <td>{order.orderStatus}</td>\n                        <td>{order.orderdDate}</td>\n                        <td>{order.ecpectedDeliveryDate}</td>\n                        <td>{order.amount}</td>\n                        <td>{order.trackingId}</td>\n    \n                        \n                        \n                      </tr>\n                    );\n                  })}\n                  ;\n                </tbody>\n              </table>\n             \n            </div>\n          </div>\n        </>\n      );\n\n   \n}\n\nexport default Orders;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}