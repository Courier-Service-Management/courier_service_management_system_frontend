{"ast":null,"code":"import axios from 'axios';\nimport { createUrl, log } from '../utils/utils';\nexport async function signUp(firstName, lastName, email, password, mobile, gender, branchId, role) {\n  const url = createUrl('/emps/add');\n  const body = {\n    firstName,\n    lastName,\n    email,\n    password,\n    mobile,\n    gender,\n    branchId,\n    role\n  };\n\n  // wait till axios is making the api call and getting response from server\n  try {\n    const response = await axios.post(url, body);\n    log(response.data);\n    // console.log(response.data)\n    return response.data;\n  } catch (ex) {\n    log(ex);\n    return null;\n  }\n}\nexport async function loginUser(email, password) {\n  const url = createUrl('/emps/signIn');\n  const body = {\n    email,\n    password\n  };\n\n  // wait till axios is making the api call and getting response from server\n  try {\n    const response = await axios.post(url, body);\n    log(response.data);\n    return response.data;\n  } catch (ex) {\n    log(ex);\n    return null;\n  }\n}\nexport async function getEmpList(branchId) {\n  const url = createUrl(`/branch/branchemp/${branchId}`);\n  try {\n    // get the current user's token from session storage\n    // const { token } = sessionStorage\n\n    // // create a header to send the token\n    // const header = {\n    //   headers: {\n    //     token,\n    //   },\n    // }\n\n    // make the api call using the token in the header\n    const response = await axios.get(url);\n    log(response.data);\n    return response.data;\n  } catch (ex) {\n    log(ex);\n    return null;\n  }\n}\nexport async function updateEmp(empId, firstName, lastName, email, gender, mobile, password, role, branchId) {\n  const url = createUrl(\"/emps/update\");\n  const body = {\n    empId,\n    firstName,\n    lastName,\n    email,\n    gender,\n    mobile,\n    password,\n    role,\n    branchId\n  };\n\n  // wait till axios is making the api call and getting response from server\n  try {\n    const response = await axios.put(url, body);\n    log(response.data);\n    // console.log(response.data)\n    return response.data;\n  } catch (ex) {\n    log(ex);\n    return null;\n  }\n}\nexport async function editEmpDetails(empId) {\n  const url = createUrl(`/branch/${branchId}`);\n\n  // wait till axios is making the api call and getting response from server\n  try {\n    const response = await axios.get(url);\n    log(response.data);\n    // console.log(response.data)\n    return response.data;\n  } catch (ex) {\n    log(ex);\n    return null;\n  }\n}","map":{"version":3,"names":["axios","createUrl","log","signUp","firstName","lastName","email","password","mobile","gender","branchId","role","url","body","response","post","data","ex","loginUser","getEmpList","get","updateEmp","empId","put","editEmpDetails"],"sources":["/home/abhishek/Courier Service Management/Courier/Emp/src/services/user.js"],"sourcesContent":["import axios from 'axios'\nimport { createUrl, log } from '../utils/utils'\n\nexport async function signUp(\n  firstName,\n  lastName,\n  email,\n  password,\n  mobile,\n  gender,\n  branchId,\n  role\n) {\n  const url = createUrl('/emps/add')\n  \n  const body = {\n    firstName,\n    lastName,\n    email,\n    password,\n    mobile,\n    gender,\n    branchId,\n    role\n  }\n\n  // wait till axios is making the api call and getting response from server\n  try {\n    const response = await axios.post(url, body)\n    log(response.data)\n    // console.log(response.data)\n    return response.data\n  \n  } catch (ex) {\n    log(ex)\n    return null\n  }\n}\n\nexport async function loginUser(email, password) {\n  const url = createUrl('/emps/signIn')\n  const body = {\n    email,\n    password,\n  }\n\n  // wait till axios is making the api call and getting response from server\n  try {\n    const response = await axios.post(url, body)\n    log(response.data)\n    return response.data\n  } catch (ex) {\n    log(ex)\n    return null\n  }\n}\n\n\n\nexport async function getEmpList(branchId) {\n  const url = createUrl(`/branch/branchemp/${branchId}`);\n\n  try {\n    // get the current user's token from session storage\n    // const { token } = sessionStorage\n\n    // // create a header to send the token\n    // const header = {\n    //   headers: {\n    //     token,\n    //   },\n    // }\n\n    // make the api call using the token in the header\n    const response = await axios.get(url);\n    log(response.data);\n    return response.data;\n  } catch (ex) {\n    log(ex);\n    return null;\n  }\n}\n\n\nexport async function updateEmp(\n  empId,\n      firstName,\n      lastName,\n      email,\n      gender,\n      mobile,\n      password,\n      role,\n      branchId\n) {\n  const url = createUrl(\"/emps/update\");\n\n  const body = {\n    empId,\n    firstName,\n    lastName,\n    email,\n    gender,\n    mobile,\n    password,\n    role,\n    branchId\n  };\n\n  // wait till axios is making the api call and getting response from server\n  try {\n    const response = await axios.put(url, body);\n    log(response.data);\n    // console.log(response.data)\n    return response.data;\n  } catch (ex) {\n    log(ex);\n    return null;\n  }\n}\n\n\n\nexport async function editEmpDetails(empId) {\n  const url = createUrl(`/branch/${branchId}`);\n\n  // wait till axios is making the api call and getting response from server\n  try {\n    const response = await axios.get(url);\n    log(response.data);\n    // console.log(response.data)\n    return response.data;\n  } catch (ex) {\n    log(ex);\n    return null;\n  }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}